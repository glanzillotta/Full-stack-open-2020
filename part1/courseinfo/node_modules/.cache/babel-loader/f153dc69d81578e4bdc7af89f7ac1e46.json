{"ast":null,"code":"var _jsxFileName = \"/home/gl/Documents/Full-stack-open-2020/part1/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst App = () => {\n  const course = \"Half Stack application development\";\n  const parts = [{\n    name: \"Fundamentals of React\",\n    exercises: 10\n  }, {\n    name: \"Using props to pass data\",\n    exercises: 7\n  }, {\n    name: \"State of a component\",\n    exercises: 14\n  }];\n  console.log(parts[0]);\n  /*\n  const Header = (props) => {\n    return (\n      <div>\n        <h1>{props.course}</h1>\n      </div>\n    );\n  };\n   const Part = (props) => {\n    return (\n      <div>\n        <p>\n          {props.name} {props.exercises}\n        </p>\n      </div>\n    );\n  };\n   const Content = (props) => {\n    return (\n      <div>\n        <Part name={props[0].name} exercises={props[0].exercises} />\n        <Part name={props[1].name} exercises={props[1].exercises} />\n        <Part name={props[2].name} exercises={props[2].exercises} />\n      </div>\n    );\n  };\n   const Total = (...props) => {\n    return (\n      <div>\n        <p>\n          Number of exercises{\" \"}\n          {props[0].exercises + props[1].exercises + props[2].exercises}\n        </p>\n      </div>\n    );\n  };\n   return (\n    <div>\n      <Header name={course} />\n      <Content props={parts} />\n      <Total props={parts} />\n    </div>\n   \n  );*/\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/gl/Documents/Full-stack-open-2020/part1/src/index.js"],"names":["React","ReactDOM","App","course","parts","name","exercises","console","log","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAG,oCAAf;AACA,QAAMC,KAAK,GAAG,CACZ;AACEC,IAAAA,IAAI,EAAE,uBADR;AAEEC,IAAAA,SAAS,EAAE;AAFb,GADY,EAKZ;AACED,IAAAA,IAAI,EAAE,0BADR;AAEEC,IAAAA,SAAS,EAAE;AAFb,GALY,EASZ;AACED,IAAAA,IAAI,EAAE,sBADR;AAEEC,IAAAA,SAAS,EAAE;AAFb,GATY,CAAd;AAcAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAAC,CAAD,CAAjB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDD,CAjED;;AAmEAH,QAAQ,CAACQ,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst App = () => {\n  const course = \"Half Stack application development\";\n  const parts = [\n    {\n      name: \"Fundamentals of React\",\n      exercises: 10,\n    },\n    {\n      name: \"Using props to pass data\",\n      exercises: 7,\n    },\n    {\n      name: \"State of a component\",\n      exercises: 14,\n    },\n  ];\n  console.log(parts[0]);\n  /*\n  const Header = (props) => {\n    return (\n      <div>\n        <h1>{props.course}</h1>\n      </div>\n    );\n  };\n\n  const Part = (props) => {\n    return (\n      <div>\n        <p>\n          {props.name} {props.exercises}\n        </p>\n      </div>\n    );\n  };\n\n  const Content = (props) => {\n    return (\n      <div>\n        <Part name={props[0].name} exercises={props[0].exercises} />\n        <Part name={props[1].name} exercises={props[1].exercises} />\n        <Part name={props[2].name} exercises={props[2].exercises} />\n      </div>\n    );\n  };\n\n  const Total = (...props) => {\n    return (\n      <div>\n        <p>\n          Number of exercises{\" \"}\n          {props[0].exercises + props[1].exercises + props[2].exercises}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Header name={course} />\n      <Content props={parts} />\n      <Total props={parts} />\n    </div>\n\t  \n  );*/\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}